import tkinter as tk
from tkinter import filedialog
from datetime import datetime
import time

#Demande à l'utilisateur de sélectionnée les fichiers et ajoute les datas
def open_path():
    readed_trc_msg = []
    # Utilise tkinter pour ouvrir le file dialog
    root = tk.Tk()
    root.withdraw()  # Cache la fenêtre principale
    file_path = filedialog.askopenfilename()
    # Lis le document et stock chaques lignes dans un tableau
    with open(file_path,'r') as file:
        for line in file:
            #Enlève l'entête
            if line[0] != ';':
                readed_trc_msg.append(line)

    # Récupération offset (time 1er trame)
    msg1 = readed_trc_msg[0]
    msg1 = msg1.strip() 
    elements = msg1.split() 
    offset = float(elements[1])
    for i,msg in enumerate(readed_trc_msg):
        # lis chaque trame
        msg_no_space = msg.strip()
        msg_element = msg.split()
        #conversion en float
        msg_time = float(msg_element[1])
        msg_time = round(msg_time, 3)
        #Calcul de nouveau temps
        new_time = msg_time - offset
        new_time = round(new_time, 3)
        msg_element[1] = str(new_time)
        readed_trc_msg[i] = { "text":' '.join(msg_element),
                             "time":new_time}
        pass
    return(readed_trc_msg)
    
def merge():
    global trc_1
    global trc_2
    global merge_sorted
    merge =[]
    merge_sorted =[]
    # merge
    merge = trc_1 + trc_2
    # tri par odrec roissant
    merge_sorted = sorted(merge, key=lambda x: x['time'])
    # maj index
    for j,el in enumerate(merge_sorted):
        msg = el["text"]
        # lis chaque trame
        msg_no_space = msg.strip()
        msg_element = msg.split()
        msg_element[0] = str(j)+")"
        merge_sorted[j] = ' '.join(msg_element)
                            

    pass
    #for msg



def save_file():
    global merge_sorted
    #mise en forme de la start_date
    start_date = datetime.now()
    start_date = start_date.strftime("%d/%m/%Y %H:%M:%S")
    # création nom du fichier
    now = datetime.now()
    now_str = now.strftime("%d-%m-%Y_%H-%M-%S")
    file_name = "merged_" + now_str + ".trc"
    with open(file_name, 'w') as f: 
    
        #Ecriture en tête
        f.write(""";$FILEVERSION=1.3
;$STARTTIME=44956.551155115827
;
;   Start time: """ + str(start_date) +"""
;   Generated by NWT Network Bridge v1.0.0
;-------------------------------------------------------------------------------
;   Bus  Connection   Net Connection     Protocol  Bit rate
;   1    Connection1  Mqtt               Custom    Custom
;-------------------------------------------------------------------------------
;   Message   Time    Bus  Type   ID    Reserved
;   Number    Offset  |    |      [hex] |   Data Length Code
;   |         [ms]    |    |      |     |   |    Data [hex] ...
;   |         |       |    |      |     |   |    |
;---+-- ------+------ +- --+-- ---+---- +- -+-- -+ -- -- -- -- -- -- --""")
        for msg in merge_sorted:
            f.write("\n"+ " " + msg)



global trc_1
global trc_2
global merge_sorted
#Tableau comptenant élément TRC
trc_1 =[]
trc_2 =[]
# Ouvre le fichier et ajoute les datsajoute les datas 
trc_1 = open_path()
trc_2 = open_path()
merge()
save_file()
